# Main dashboard redirect
server {
    listen 80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
}

# HTTPS dashboard
server {
    listen 443 ssl http2 default_server;
    server_name _;

    # SSL configuration (self-signed for development)
    ssl_certificate /etc/nginx/certs/reactor.crt;
    ssl_certificate_key /etc/nginx/certs/reactor.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Main landing page
    location / {
        proxy_pass http://kibana:5601;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Kibana
server {
    listen 443 ssl http2;
    server_name kibana.reactor.local;

    ssl_certificate /etc/nginx/certs/reactor.crt;
    ssl_certificate_key /etc/nginx/certs/reactor.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        proxy_pass http://kibana:5601;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
}

# The Hive
server {
    listen 443 ssl http2;
    server_name thehive.reactor.local;

    ssl_certificate /etc/nginx/certs/reactor.crt;
    ssl_certificate_key /etc/nginx/certs/reactor.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        proxy_pass http://thehive:9000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
}

# MISP
server {
    listen 443 ssl http2;
    server_name misp.reactor.local;

    ssl_certificate /etc/nginx/certs/reactor.crt;
    ssl_certificate_key /etc/nginx/certs/reactor.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        proxy_pass http://misp:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
}

# Caldera
server {
    listen 443 ssl http2;
    server_name caldera.reactor.local;

    ssl_certificate /etc/nginx/certs/reactor.crt;
    ssl_certificate_key /etc/nginx/certs/reactor.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        proxy_pass http://caldera:8888;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
}

# Arkime
server {
    listen 443 ssl http2;
    server_name arkime.reactor.local;

    ssl_certificate /etc/nginx/certs/reactor.crt;
    ssl_certificate_key /etc/nginx/certs/reactor.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        proxy_pass http://arkime:8005;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
}